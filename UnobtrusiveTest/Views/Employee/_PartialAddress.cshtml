@using UnobtrusiveTest.Controllers
@model UnobtrusiveTest.Models.Employee.Employee

@{
    FormViewData formViewData = null;
    if (ViewData["FormViewData"] is FormViewData)
    {
        formViewData = ViewData["FormViewData"] as FormViewData;
    }
}

<div id="RegSuccessDivTwo">
    <h2>Address Info</h2>


    <form asp-action="_PartialAddress" asp-controller="Employee" method="POST" data-ajax="true" data-ajax-update="#RegSuccessDivTwo" data-ajax-mode="replace">

        <div class="container">
            <div class="row">
                <div class="col-md-4">
                    @Html.DisplayNameFor(e => e.FirstName)
                </div>
                <div class="col-md-4">
                    @Html.DisplayFor(model => model.FirstName)
                </div>


            </div>

            <div class="row">
                <div class="col-md-4">
                    @Html.DisplayNameFor(model => model.LastName)
                </div>
                <div class="col-md-4">
                    @Html.DisplayFor(model => model.LastName)
                </div>


            </div>




        </div>



        @Html.LabelFor(e => e.Address1)<br />
        @Html.TextBoxFor(e => e.Address1)
        @Html.ValidationMessageFor(e => e.Address1)
        <br />
        @Html.LabelFor(e => e.Address2)<br />
        @Html.TextBoxFor(e => e.Address2)
        @Html.ValidationMessageFor(e => e.Address2)
        <br />

        @Html.LabelFor(e => e.City)<br />
        @Html.TextBoxFor(e => e.City)
        @Html.ValidationMessageFor(e => e.City)
        <br />
        @Html.LabelFor(e => e.State)<br />
        @Html.TextBoxFor(e => e.State)
        @Html.ValidationMessageFor(e => e.State)
        <br />
        @Html.LabelFor(e => e.Zip)<br />
        @Html.TextBoxFor(e => e.Zip)
        @Html.ValidationMessageFor(e => e.Zip)
        <br />





        <input type="submit" name="button" value="Start PREV" />
        |
        <input type="submit" name="button" value="Additional Info NEXT" />

       

        @if (formViewData.Last)
        {

           <span>&nbsp; | &nbsp;</span> <input type="submit" name="button" value="FINISH" />
        }
    </form>



</div>